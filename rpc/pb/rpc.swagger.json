{
  "swagger": "2.0",
  "info": {
    "title": "rpc/pb/rpc.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ApiService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/execTx": {
      "post": {
        "summary": "execute transaction",
        "operationId": "ApiService_ExecTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbTxReceipt"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcpbTransactionRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getAccount/{name}/{byLongestChain}": {
      "get": {
        "summary": "get account",
        "operationId": "ApiService_GetAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "account name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "byLongestChain",
            "description": "get account by longest chain's head block or last irreversible block",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getBatchContractStorage": {
      "post": {
        "summary": "get batch contract storage",
        "operationId": "ApiService_GetBatchContractStorage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbGetBatchContractStorageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcpbGetBatchContractStorageRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getBlockByHash/{hash}/{complete}": {
      "get": {
        "summary": "get block by hash",
        "operationId": "ApiService_GetBlockByHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbBlockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "description": "block hash",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "complete",
            "description": "complete means whether including the full transactions and transaction receipts",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getBlockByNumber/{number}/{complete}": {
      "get": {
        "summary": "get block by number",
        "operationId": "ApiService_GetBlockByNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbBlockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "number",
            "description": "block number",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "complete",
            "description": "complete means whether including the full transactions and transaction receipts",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getBlockHeaderByRange": {
      "post": {
        "summary": "get batch of block header",
        "operationId": "ApiService_GetBlockHeaderByRange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbBlockHeaderByRangeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcpbGetBlockHeaderByRangeRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getBlockTxsByContract": {
      "post": {
        "operationId": "ApiService_GetBlockTxsByContract",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbBlockTxsByContractResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcpbGetBlockTxsByContractRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getCandidateBonus/{name}/{byLongestChain}": {
      "get": {
        "operationId": "ApiService_GetCandidateBonus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbCandidateBonus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "account name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "byLongestChain",
            "description": "get account by longest chain's head block or last irreversible block",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getChainInfo": {
      "get": {
        "summary": "get blockchain information",
        "operationId": "ApiService_GetChainInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbChainInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getContract/{id}/{byLongestChain}": {
      "get": {
        "summary": "get contract",
        "operationId": "ApiService_GetContract",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "contract id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "byLongestChain",
            "description": "get data by longest chain's head block or last irreversible block",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getContractStorage": {
      "post": {
        "summary": "get contract storage",
        "operationId": "ApiService_GetContractStorage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbGetContractStorageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcpbGetContractStorageRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getContractStorageFields": {
      "post": {
        "summary": "get contract fields storage",
        "operationId": "ApiService_GetContractStorageFields",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbGetContractStorageFieldsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcpbGetContractStorageFieldsRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getContractVote/{id}/{byLongestChain}": {
      "get": {
        "summary": "get contract vote",
        "operationId": "ApiService_GetContractVote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbContractVote"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "contract id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "byLongestChain",
            "description": "get data by longest chain's head block or last irreversible block",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getGasRatio": {
      "get": {
        "summary": "get gas ratio infomation",
        "operationId": "ApiService_GetGasRatio",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbGasRatioResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getNodeInfo": {
      "get": {
        "summary": "get the node information",
        "operationId": "ApiService_GetNodeInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbNodeInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getProducerVoteInfo/{account}/{byLongestChain}": {
      "get": {
        "summary": "get producer vote infomation",
        "operationId": "ApiService_GetProducerVoteInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbGetProducerVoteInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account",
            "description": "account name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "byLongestChain",
            "description": "get data by longest chain's head block or last irreversible block",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getRAMInfo": {
      "get": {
        "summary": "get current blockchain ram information",
        "operationId": "ApiService_GetRAMInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbRAMInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getRawBlockByNumber/{number}/{complete}": {
      "get": {
        "summary": "get raw block by number, including block signature etc",
        "operationId": "ApiService_GetRawBlockByNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbRawBlockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "number",
            "description": "block number",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "complete",
            "description": "complete means whether including the full transactions and transaction receipts",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getToken721Balance/{account}/{token}/{byLongestChain}": {
      "get": {
        "summary": "get token721 balance",
        "operationId": "ApiService_GetToken721Balance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbGetToken721BalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account",
            "description": "account name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "description": "the token name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "byLongestChain",
            "description": "get data by longest chain's head block or last irreversible block",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getToken721Metadata/{token}/{tokenId}/{byLongestChain}": {
      "get": {
        "summary": "get token721 metadata",
        "operationId": "ApiService_GetToken721Metadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbGetToken721MetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "token",
            "description": "the token name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tokenId",
            "description": "token id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "byLongestChain",
            "description": "get data by longest chain's head block or last irreversible block",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getToken721Owner/{token}/{tokenId}/{byLongestChain}": {
      "get": {
        "summary": "get token721 owner",
        "operationId": "ApiService_GetToken721Owner",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbGetToken721OwnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "token",
            "description": "the token name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tokenId",
            "description": "token id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "byLongestChain",
            "description": "get data by longest chain's head block or last irreversible block",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getTokenBalance/{account}/{token}/{byLongestChain}": {
      "get": {
        "summary": "get token balance",
        "operationId": "ApiService_GetTokenBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbGetTokenBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account",
            "description": "account name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "description": "the token name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "byLongestChain",
            "description": "get data by longest chain's head block or last irreversible block",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getTokenInfo/{symbol}/{byLongestChain}": {
      "get": {
        "operationId": "ApiService_GetTokenInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbTokenInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "symbol",
            "description": "token symbol",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "byLongestChain",
            "description": "get tokeninfo by longest chain's head block or last irreversible block",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getTxByHash/{hash}": {
      "get": {
        "summary": "get transaction by hash",
        "operationId": "ApiService_GetTxByHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "description": "tx hash",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getTxReceiptByTxHash/{hash}": {
      "get": {
        "summary": "get transaction receipt by transaction hash",
        "operationId": "ApiService_GetTxReceiptByTxHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbTxReceipt"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "description": "tx hash",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/getVoterBonus/{name}/{byLongestChain}": {
      "get": {
        "operationId": "ApiService_GetVoterBonus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbVoterBonus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "account name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "byLongestChain",
            "description": "get account by longest chain's head block or last irreversible block",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/listContractStorage": {
      "post": {
        "operationId": "ApiService_ListContractStorage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbListContractStorageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcpbListContractStorageRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/sendTx": {
      "post": {
        "summary": "send transaction",
        "operationId": "ApiService_SendTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcpbSendTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcpbTransactionRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/subscribe": {
      "post": {
        "summary": "subscribe an event",
        "operationId": "ApiService_Subscribe",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/rpcpbSubscribeResponse"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of rpcpbSubscribeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcpbSubscribeRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    }
  },
  "definitions": {
    "AccountGasInfo": {
      "type": "object",
      "properties": {
        "currentTotal": {
          "type": "number",
          "format": "double",
          "title": "current total gas amount"
        },
        "transferableGas": {
          "type": "number",
          "format": "double"
        },
        "pledgeGas": {
          "type": "number",
          "format": "double"
        },
        "increaseSpeed": {
          "type": "number",
          "format": "double",
          "title": "gas increase speed"
        },
        "limit": {
          "type": "number",
          "format": "double",
          "title": "gas limit"
        },
        "pledgedInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountPledgeInfo"
          },
          "title": "pledge information"
        }
      },
      "description": "The message defines account gas information."
    },
    "AccountGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "group name"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountItem"
          },
          "title": "permission items"
        }
      },
      "description": "The message defines a permission group."
    },
    "AccountItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "permission name or key pair id"
        },
        "isKeyPair": {
          "type": "boolean",
          "title": "whether it's a key pair"
        },
        "weight": {
          "type": "string",
          "format": "int64",
          "title": "permission weight"
        },
        "permission": {
          "type": "string",
          "title": "permission"
        }
      },
      "description": "The message defines permission item."
    },
    "AccountPermission": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "permission name"
        },
        "groupNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "permission groups"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountItem"
          },
          "title": "permission items"
        },
        "threshold": {
          "type": "string",
          "format": "int64",
          "title": "permission threshold"
        }
      },
      "description": "The message defines the permission struct."
    },
    "AccountPledgeInfo": {
      "type": "object",
      "properties": {
        "pledger": {
          "type": "string",
          "title": "the account who pledges"
        },
        "amount": {
          "type": "number",
          "format": "double",
          "title": "pledged amount"
        }
      },
      "description": "The message defines account pledged coin information."
    },
    "AccountRAMInfo": {
      "type": "object",
      "properties": {
        "available": {
          "type": "string",
          "format": "int64",
          "title": "available ram bytes"
        },
        "used": {
          "type": "string",
          "format": "int64",
          "title": "used ram bytes"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "total ram bytes"
        }
      },
      "description": "The message defines account ram information."
    },
    "EventTopic": {
      "type": "string",
      "enum": [
        "CONTRACT_RECEIPT",
        "CONTRACT_EVENT"
      ],
      "default": "CONTRACT_RECEIPT",
      "title": "- CONTRACT_RECEIPT: contract receipt\n - CONTRACT_EVENT: contract event"
    },
    "GetBatchContractStorageRequestKeyField": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "the key in StateDB"
        },
        "field": {
          "type": "string",
          "title": "get the value from StateDB, fields is needed if StateDB[key] is a map.(we get StateDB[key][field] in this case)"
        }
      },
      "description": "The message defines GetContractStorage request params."
    },
    "ListContractStorageRequestStorageType": {
      "type": "string",
      "enum": [
        "KV",
        "MAP"
      ],
      "default": "KV",
      "title": "- KV: written by storage.put(..., ...)\n - MAP: written by storage.mapPut(..., ..., ...)"
    },
    "ListContractStorageResponseData": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "the key in StateDB"
        },
        "value": {
          "type": "string",
          "title": "the value from StateDB"
        }
      }
    },
    "SignatureAlgorithm": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "SECP256K1",
        "ED25519"
      ],
      "default": "UNKNOWN",
      "description": "The enumeration defines the signature algorithm.\n\n - UNKNOWN: unknown\n - SECP256K1: secp256k1\n - ED25519: ed25519"
    },
    "SubscribeRequestFilter": {
      "type": "object",
      "properties": {
        "contractId": {
          "type": "string",
          "title": "contract id"
        }
      }
    },
    "TxReceiptStatusCode": {
      "type": "string",
      "enum": [
        "SUCCESS",
        "GAS_RUN_OUT",
        "BALANCE_NOT_ENOUGH",
        "WRONG_PARAMETER",
        "RUNTIME_ERROR",
        "TIMEOUT",
        "WRONG_TX_FORMAT",
        "DUPLICATE_SET_CODE",
        "UNKNOWN_ERROR"
      ],
      "default": "SUCCESS",
      "description": "The enumeration defines transaction receipt status code.\n\n - SUCCESS: success\n - GAS_RUN_OUT: run out of gas\n - BALANCE_NOT_ENOUGH: balance not enough\n - WRONG_PARAMETER: wrong parameter\n - RUNTIME_ERROR: runtime error\n - TIMEOUT: run out of time\n - WRONG_TX_FORMAT: wrong transaction format\n - DUPLICATE_SET_CODE: more than one set code action in a transaction\n - UNKNOWN_ERROR: unknown error"
    },
    "blockpbBlock": {
      "type": "object",
      "properties": {
        "head": {
          "$ref": "#/definitions/blockpbBlockHead"
        },
        "sign": {
          "$ref": "#/definitions/sigpbSignature"
        },
        "txs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/txpbTx"
          }
        },
        "receipts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/txpbTxReceipt"
          }
        },
        "txHashes": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "receiptHashes": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "blockType": {
          "$ref": "#/definitions/blockpbBlockType"
        }
      }
    },
    "blockpbBlockHead": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64"
        },
        "parentHash": {
          "type": "string",
          "format": "byte"
        },
        "txMerkleHash": {
          "type": "string",
          "format": "byte"
        },
        "txReceiptMerkleHash": {
          "type": "string",
          "format": "byte"
        },
        "info": {
          "type": "string",
          "format": "byte"
        },
        "number": {
          "type": "string",
          "format": "int64"
        },
        "witness": {
          "type": "string"
        },
        "time": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "blockpbBlockType": {
      "type": "string",
      "enum": [
        "NORMAL",
        "ONLYHASH"
      ],
      "default": "NORMAL"
    },
    "contractAmount": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "val": {
          "type": "string"
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcpbAccount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "account name"
        },
        "balance": {
          "type": "number",
          "format": "double",
          "title": "account balance"
        },
        "gasInfo": {
          "$ref": "#/definitions/AccountGasInfo",
          "title": "gas information"
        },
        "ramInfo": {
          "$ref": "#/definitions/AccountRAMInfo",
          "title": "ram information"
        },
        "permissions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AccountPermission"
          },
          "title": "account permission"
        },
        "groups": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AccountGroup"
          },
          "title": "account groups"
        },
        "frozenBalances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcpbFrozenBalance"
          },
          "title": "frozen balance information"
        },
        "voteInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcpbVoteInfo"
          },
          "title": "vote information"
        }
      },
      "description": "The message defines account struct."
    },
    "rpcpbAction": {
      "type": "object",
      "properties": {
        "contract": {
          "type": "string",
          "title": "contract name"
        },
        "actionName": {
          "type": "string",
          "title": "action name"
        },
        "data": {
          "type": "string",
          "title": "data"
        }
      },
      "description": "The message defines transaction action struct."
    },
    "rpcpbAmountLimit": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "title": "token name"
        },
        "value": {
          "type": "string",
          "title": "limit value"
        }
      },
      "description": "The message defines transaction amount limit struct."
    },
    "rpcpbBlock": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "title": "block hash"
        },
        "version": {
          "type": "string",
          "format": "int64",
          "title": "block version"
        },
        "parentHash": {
          "type": "string",
          "title": "parent block hash"
        },
        "txMerkleHash": {
          "type": "string",
          "title": "transaction merkle tree root hash"
        },
        "txReceiptMerkleHash": {
          "type": "string",
          "title": "transaction receipt merkle tree root hash"
        },
        "number": {
          "type": "string",
          "format": "int64",
          "title": "block number"
        },
        "witness": {
          "type": "string",
          "title": "block producer witness"
        },
        "time": {
          "type": "string",
          "format": "int64",
          "title": "block timestamp"
        },
        "gasUsage": {
          "type": "number",
          "format": "double",
          "title": "block gas usage"
        },
        "txCount": {
          "type": "string",
          "format": "int64",
          "title": "transaction count"
        },
        "info": {
          "$ref": "#/definitions/rpcpbBlockInfo",
          "title": "extra information"
        },
        "origInfo": {
          "type": "string",
          "title": "original info bytes"
        },
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcpbTransaction"
          },
          "title": "block transactions"
        }
      },
      "description": "The message defines the block struct."
    },
    "rpcpbBlockHeaderByRangeResponse": {
      "type": "object",
      "properties": {
        "blockList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/blockpbBlock"
          }
        }
      }
    },
    "rpcpbBlockInfo": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "integer",
          "format": "int32",
          "title": "pack mode"
        },
        "thread": {
          "type": "integer",
          "format": "int32",
          "title": "transaction execution thread number"
        },
        "batchIndex": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "title": "transaction index of every batch execution"
        }
      },
      "title": "The message defines block extra information"
    },
    "rpcpbBlockResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/rpcpbBlockResponseStatus",
          "title": "transaction status"
        },
        "block": {
          "$ref": "#/definitions/rpcpbBlock",
          "title": "block"
        }
      }
    },
    "rpcpbBlockResponseStatus": {
      "type": "string",
      "enum": [
        "PENDING",
        "IRREVERSIBLE"
      ],
      "default": "PENDING",
      "description": "The enumeration defines block status.\n\n - PENDING: pending in block cache\n - IRREVERSIBLE: irreversible"
    },
    "rpcpbBlockTxs": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/rpcpbBlockResponseStatus",
          "title": "block status"
        },
        "blockNumber": {
          "type": "string",
          "format": "int64",
          "title": "block number"
        },
        "txList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcpbTransaction"
          },
          "title": "transaction"
        }
      }
    },
    "rpcpbBlockTxsByContractResponse": {
      "type": "object",
      "properties": {
        "blocktxList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcpbBlockTxs"
          }
        }
      }
    },
    "rpcpbCandidateBonus": {
      "type": "object",
      "properties": {
        "bonus": {
          "type": "number",
          "format": "double",
          "title": "the candidate bonus"
        }
      },
      "description": "The message defines the getCandidateBonus response."
    },
    "rpcpbChainInfoResponse": {
      "type": "object",
      "properties": {
        "netName": {
          "type": "string",
          "title": "the name of network, such mainnet or testnet"
        },
        "protocolVersion": {
          "type": "string",
          "title": "the iost protocol version"
        },
        "chainId": {
          "type": "integer",
          "format": "int64",
          "title": "chain id"
        },
        "headBlock": {
          "type": "string",
          "format": "int64",
          "title": "head block height"
        },
        "headBlockHash": {
          "type": "string",
          "title": "head block hash"
        },
        "libBlock": {
          "type": "string",
          "format": "int64",
          "title": "last irreversible block number"
        },
        "libBlockHash": {
          "type": "string",
          "title": "last irreversible block hash"
        },
        "witnessList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the current witness list"
        },
        "libWitnessList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the active witness list of lat irreversible block"
        },
        "pendingWitnessList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the pending witness list"
        },
        "headBlockTime": {
          "type": "string",
          "format": "int64",
          "title": "the head block time"
        },
        "libBlockTime": {
          "type": "string",
          "format": "int64",
          "title": "the last irreversible block time"
        }
      },
      "description": "The message defines chain information response."
    },
    "rpcpbContract": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "contract id"
        },
        "code": {
          "type": "string",
          "title": "contract code"
        },
        "language": {
          "type": "string",
          "title": "contract language"
        },
        "version": {
          "type": "string",
          "title": "contract version"
        },
        "origCode": {
          "type": "string",
          "title": "original contract code"
        },
        "abis": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcpbContractABI"
          },
          "title": "contract abis"
        }
      },
      "description": "The message defines the contract struct."
    },
    "rpcpbContractABI": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "abi name"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "abi arguments"
        },
        "amountLimit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcpbAmountLimit"
          },
          "title": "abi amount limt"
        }
      },
      "description": "The message defines the ABI struct."
    },
    "rpcpbContractVote": {
      "type": "object",
      "properties": {
        "voteInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcpbVoteInfo"
          },
          "title": "vote information"
        }
      },
      "title": "The message defines the contract vote info"
    },
    "rpcpbEvent": {
      "type": "object",
      "properties": {
        "topic": {
          "$ref": "#/definitions/EventTopic",
          "title": "event topic"
        },
        "data": {
          "type": "string",
          "title": "event data"
        },
        "time": {
          "type": "string",
          "format": "int64",
          "title": "event time"
        }
      },
      "description": "The message defines event struct."
    },
    "rpcpbFrozenBalance": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double",
          "title": "balance amount"
        },
        "time": {
          "type": "string",
          "format": "int64",
          "title": "free time"
        }
      },
      "description": "The message defines the account's frozen balance."
    },
    "rpcpbGasRatioResponse": {
      "type": "object",
      "properties": {
        "lowestGasRatio": {
          "type": "number",
          "format": "double",
          "title": "lowest gas ratio in head block"
        },
        "medianGasRatio": {
          "type": "number",
          "format": "double",
          "title": "median gas ratio in head block"
        }
      }
    },
    "rpcpbGetBatchContractStorageRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "contract id"
        },
        "keyFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetBatchContractStorageRequestKeyField"
          },
          "title": "the batch query"
        },
        "byLongestChain": {
          "type": "boolean",
          "title": "get data by longest chain's head block or last irreversible block"
        }
      },
      "description": "The message defines get batch contract storage request."
    },
    "rpcpbGetBatchContractStorageResponse": {
      "type": "object",
      "properties": {
        "datas": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the repeated json string data"
        },
        "blockHash": {
          "type": "string",
          "title": "block hash"
        },
        "blockNumber": {
          "type": "string",
          "format": "int64",
          "title": "block number"
        }
      },
      "description": "The message defines get batch contract storage response."
    },
    "rpcpbGetBlockHeaderByRangeRequest": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "int64"
        },
        "end": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "The request message containing range start and end"
    },
    "rpcpbGetBlockTxsByContractRequest": {
      "type": "object",
      "properties": {
        "fromBlock": {
          "type": "string",
          "format": "int64"
        },
        "toBlock": {
          "type": "string",
          "format": "int64"
        },
        "contract": {
          "type": "string"
        },
        "actionName": {
          "type": "string"
        }
      }
    },
    "rpcpbGetContractStorageFieldsRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "contract id"
        },
        "key": {
          "type": "string",
          "title": "get the fields from StateDB"
        },
        "byLongestChain": {
          "type": "boolean",
          "title": "get data by longest chain's head block or last irreversible block"
        }
      },
      "description": "The message defines get contract storage request."
    },
    "rpcpbGetContractStorageFieldsResponse": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "the fields."
        },
        "blockHash": {
          "type": "string",
          "title": "block hash"
        },
        "blockNumber": {
          "type": "string",
          "format": "int64",
          "title": "block number"
        }
      },
      "description": "The message defines get contract storage response."
    },
    "rpcpbGetContractStorageRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "contract id"
        },
        "key": {
          "type": "string",
          "title": "the key in the StateDB"
        },
        "field": {
          "type": "string",
          "title": "get the value from StateDB, field is needed if StateDB[key] is a map.(we get StateDB[key][field] in this case)"
        },
        "byLongestChain": {
          "type": "boolean",
          "title": "get data by longest chain's head block or last irreversible block"
        }
      },
      "description": "The message defines get contract storage request."
    },
    "rpcpbGetContractStorageResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "the json string data"
        },
        "blockHash": {
          "type": "string",
          "title": "block hash"
        },
        "blockNumber": {
          "type": "string",
          "format": "int64",
          "title": "block number"
        }
      },
      "description": "The message defines get contract storage response."
    },
    "rpcpbGetProducerVoteInfoResponse": {
      "type": "object",
      "properties": {
        "pubkey": {
          "type": "string",
          "title": "producer's public key"
        },
        "loc": {
          "type": "string",
          "title": "producer's location"
        },
        "url": {
          "type": "string",
          "title": "producer's url"
        },
        "netId": {
          "type": "string",
          "title": "producer's net id"
        },
        "isProducer": {
          "type": "boolean",
          "title": "is producer"
        },
        "status": {
          "type": "string",
          "title": "is approved"
        },
        "online": {
          "type": "boolean",
          "title": "is online"
        },
        "votes": {
          "type": "number",
          "format": "double",
          "title": "votes"
        }
      }
    },
    "rpcpbGetToken721BalanceResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "string",
          "format": "int64",
          "title": "token balance"
        },
        "tokenIDs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "balance information"
        }
      },
      "description": "The message defines get token721 balance response."
    },
    "rpcpbGetToken721MetadataResponse": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "string",
          "title": "token metadata"
        }
      },
      "description": "The message defines get token721 metadata response."
    },
    "rpcpbGetToken721OwnerResponse": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string",
          "title": "token owner"
        }
      },
      "description": "The message defines get token721 owner response."
    },
    "rpcpbGetTokenBalanceResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "number",
          "format": "double",
          "title": "token balance"
        },
        "frozenBalances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcpbFrozenBalance"
          },
          "title": "frozen balance information"
        }
      },
      "description": "The message defines get token balance response."
    },
    "rpcpbListContractStorageRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "contract id"
        },
        "from": {
          "type": "string",
          "title": "Optional. keys will be in [from, to) and prefixed with `prefix`"
        },
        "to": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "storageType": {
          "$ref": "#/definitions/ListContractStorageRequestStorageType"
        },
        "limit": {
          "type": "string",
          "format": "int64",
          "title": "max count to return. up to 100"
        },
        "byLongestChain": {
          "type": "boolean",
          "title": "get data by longest chain's head block or last irreversible block"
        }
      }
    },
    "rpcpbListContractStorageResponse": {
      "type": "object",
      "properties": {
        "datas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListContractStorageResponseData"
          }
        },
        "blockHash": {
          "type": "string",
          "title": "block hash"
        },
        "blockNumber": {
          "type": "string",
          "format": "int64",
          "title": "block number"
        }
      }
    },
    "rpcpbNetworkInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "local network ID"
        },
        "peerCount": {
          "type": "integer",
          "format": "int32",
          "title": "peer connection count"
        }
      },
      "description": "The message defines network connection information."
    },
    "rpcpbNodeInfoResponse": {
      "type": "object",
      "properties": {
        "buildTime": {
          "type": "string",
          "title": "build time"
        },
        "gitHash": {
          "type": "string",
          "title": "git hash"
        },
        "mode": {
          "type": "string",
          "title": "node mode"
        },
        "network": {
          "$ref": "#/definitions/rpcpbNetworkInfo",
          "title": "network connection information"
        },
        "codeVersion": {
          "type": "string",
          "title": "code version string"
        },
        "serverTime": {
          "type": "string",
          "format": "int64",
          "title": "server time"
        }
      },
      "description": "The message containing the node's information."
    },
    "rpcpbRAMInfoResponse": {
      "type": "object",
      "properties": {
        "usedRam": {
          "type": "string",
          "format": "int64",
          "title": "how many bytes have been used"
        },
        "availableRam": {
          "type": "string",
          "format": "int64",
          "title": "how many bytes have not been used"
        },
        "totalRam": {
          "type": "string",
          "format": "int64",
          "title": "total ram byte"
        },
        "sellPrice": {
          "type": "number",
          "format": "double",
          "title": "User can sell NUM bytes RAM to system to get `NUM * sell_price` IOSTs"
        },
        "buyPrice": {
          "type": "number",
          "format": "double",
          "title": "User can spend approximate `NUM * buy_price` IOSTs for NUM bytes RAM"
        }
      },
      "description": "The message containing blockchain's ram information."
    },
    "rpcpbRawBlockResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/rpcpbRawBlockResponseStatus",
          "title": "transaction status"
        },
        "block": {
          "$ref": "#/definitions/blockpbBlock",
          "title": "block"
        }
      }
    },
    "rpcpbRawBlockResponseStatus": {
      "type": "string",
      "enum": [
        "PENDING",
        "IRREVERSIBLE"
      ],
      "default": "PENDING",
      "description": "The enumeration defines block status.\n\n - PENDING: pending in block cache\n - IRREVERSIBLE: irreversible"
    },
    "rpcpbSendTransactionResponse": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "title": "the final transaction hash"
        },
        "preTxReceipt": {
          "$ref": "#/definitions/rpcpbTxReceipt",
          "title": "the tx_receipt of execution in advance"
        }
      },
      "description": "The message defines send transaction response."
    },
    "rpcpbSignature": {
      "type": "object",
      "properties": {
        "algorithm": {
          "$ref": "#/definitions/SignatureAlgorithm",
          "title": "signature algorithm"
        },
        "signature": {
          "type": "string",
          "format": "byte",
          "title": "signature bytes"
        },
        "publicKey": {
          "type": "string",
          "format": "byte",
          "title": "public key"
        }
      },
      "description": "The message defines signature struct."
    },
    "rpcpbSubscribeRequest": {
      "type": "object",
      "properties": {
        "topics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventTopic"
          }
        },
        "filter": {
          "$ref": "#/definitions/SubscribeRequestFilter"
        }
      },
      "description": "The message defines subscribe request."
    },
    "rpcpbSubscribeResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/rpcpbEvent"
        }
      },
      "description": "The message defines subscribe response."
    },
    "rpcpbTokenInfo": {
      "type": "object",
      "properties": {
        "symbol": {
          "type": "string",
          "title": "token symbol"
        },
        "fullName": {
          "type": "string",
          "title": "token full name"
        },
        "issuer": {
          "type": "string",
          "title": "token issuer"
        },
        "totalSupply": {
          "type": "string",
          "format": "int64",
          "title": "the amount of total supply, the result is total_supply_float multiplied by deciaml"
        },
        "currentSupply": {
          "type": "string",
          "format": "int64",
          "title": "the amount of current supply, the result is current_supply_float multiplied by deciaml"
        },
        "decimal": {
          "type": "integer",
          "format": "int32",
          "title": "token decimal"
        },
        "canTransfer": {
          "type": "boolean",
          "title": "whether the token can be transfered"
        },
        "onlyIssuerCanTransfer": {
          "type": "boolean",
          "title": "whether the token can only be transfered by issuer"
        },
        "totalSupplyFloat": {
          "type": "number",
          "format": "double",
          "title": "the amount of total supply"
        },
        "currentSupplyFloat": {
          "type": "number",
          "format": "double",
          "title": "the amount of current supply"
        }
      },
      "description": "The message defines the token information."
    },
    "rpcpbTransaction": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "title": "transaction hash"
        },
        "time": {
          "type": "string",
          "format": "int64",
          "title": "transaction timestamp"
        },
        "expiration": {
          "type": "string",
          "format": "int64",
          "title": "expiration timestamp"
        },
        "gasRatio": {
          "type": "number",
          "format": "double",
          "title": "gas gas_ratio"
        },
        "gasLimit": {
          "type": "number",
          "format": "double",
          "title": "gas limit"
        },
        "delay": {
          "type": "string",
          "format": "int64",
          "title": "delay nanoseconds"
        },
        "chainId": {
          "type": "integer",
          "format": "int64",
          "title": "chain id"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcpbAction"
          },
          "title": "action list"
        },
        "signers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "signer list"
        },
        "publisher": {
          "type": "string",
          "title": "publisher"
        },
        "referredTx": {
          "type": "string",
          "title": "referred transaction hash"
        },
        "amountLimit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcpbAmountLimit"
          },
          "title": "amount limit"
        },
        "txReceipt": {
          "$ref": "#/definitions/rpcpbTxReceipt",
          "title": "transaction receipt"
        }
      },
      "description": "The message defines transaction struct."
    },
    "rpcpbTransactionRequest": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "int64",
          "title": "transaction timestamp"
        },
        "expiration": {
          "type": "string",
          "format": "int64",
          "title": "expiration timestamp"
        },
        "gasRatio": {
          "type": "number",
          "format": "double",
          "title": "gas price"
        },
        "gasLimit": {
          "type": "number",
          "format": "double",
          "title": "gas limit"
        },
        "delay": {
          "type": "string",
          "format": "int64",
          "title": "delay nanoseconds"
        },
        "chainId": {
          "type": "integer",
          "format": "int64",
          "title": "chain id"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcpbAction"
          },
          "title": "action list"
        },
        "amountLimit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcpbAmountLimit"
          },
          "title": "amount limit"
        },
        "signers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "signer list"
        },
        "signatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcpbSignature"
          },
          "title": "signatures of signers"
        },
        "publisher": {
          "type": "string",
          "title": "publisher"
        },
        "publisherSigs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcpbSignature"
          },
          "title": "signatures of publisher"
        }
      },
      "description": "The message defines the transaction request."
    },
    "rpcpbTransactionResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/rpcpbTransactionResponseStatus",
          "title": "transaction status"
        },
        "transaction": {
          "$ref": "#/definitions/rpcpbTransaction",
          "title": "transaction"
        },
        "blockNumber": {
          "type": "string",
          "format": "int64",
          "title": "block number"
        }
      },
      "description": "The message defines transaction response."
    },
    "rpcpbTransactionResponseStatus": {
      "type": "string",
      "enum": [
        "PENDING",
        "PACKED",
        "IRREVERSIBLE"
      ],
      "default": "PENDING",
      "description": "The enumeration defines transaction status.\n\n - PENDING: pending in transaction pool\n - PACKED: packed in a block that has not been confirmed\n - IRREVERSIBLE: packed in a block that is irreversible"
    },
    "rpcpbTxReceipt": {
      "type": "object",
      "properties": {
        "txHash": {
          "type": "string",
          "title": "transaction hash"
        },
        "gasUsage": {
          "type": "number",
          "format": "double",
          "title": "gas usage"
        },
        "ramUsage": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "title": "ram usage"
        },
        "statusCode": {
          "$ref": "#/definitions/TxReceiptStatusCode",
          "title": "status code"
        },
        "message": {
          "type": "string",
          "title": "message"
        },
        "returns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "transaction returns"
        },
        "receipts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcpbTxReceiptReceipt"
          },
          "title": "transaction receipts"
        }
      },
      "description": "The message defines the transaction receipt struct."
    },
    "rpcpbTxReceiptReceipt": {
      "type": "object",
      "properties": {
        "funcName": {
          "type": "string",
          "title": "function name"
        },
        "content": {
          "type": "string",
          "title": "content"
        }
      },
      "description": "The message defines transaction execution receipt."
    },
    "rpcpbVoteInfo": {
      "type": "object",
      "properties": {
        "option": {
          "type": "string",
          "title": "option name"
        },
        "votes": {
          "type": "number",
          "format": "double",
          "title": "votes"
        },
        "clearedVotes": {
          "type": "number",
          "format": "double",
          "title": "cleared votes"
        }
      },
      "description": "The message defines the account's vote info."
    },
    "rpcpbVoterBonus": {
      "type": "object",
      "properties": {
        "bonus": {
          "type": "number",
          "format": "double",
          "title": "the totol voter bonus"
        },
        "detail": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          },
          "title": "the voter bonus detail"
        }
      },
      "description": "The message defines the getVoterBonus response."
    },
    "sigpbSignature": {
      "type": "object",
      "properties": {
        "algorithm": {
          "type": "integer",
          "format": "int32"
        },
        "sig": {
          "type": "string",
          "format": "byte"
        },
        "pubKey": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "txpbAction": {
      "type": "object",
      "properties": {
        "contract": {
          "type": "string"
        },
        "actionName": {
          "type": "string"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "txpbReceipt": {
      "type": "object",
      "properties": {
        "funcName": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      }
    },
    "txpbStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "txpbTx": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "int64"
        },
        "expiration": {
          "type": "string",
          "format": "int64"
        },
        "gasLimit": {
          "type": "string",
          "format": "int64"
        },
        "gasRatio": {
          "type": "string",
          "format": "int64"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/txpbAction"
          }
        },
        "signers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "signs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sigpbSignature"
          }
        },
        "publisher": {
          "type": "string"
        },
        "publishSigns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sigpbSignature"
          }
        },
        "delay": {
          "type": "string",
          "format": "int64"
        },
        "chainId": {
          "type": "integer",
          "format": "int64"
        },
        "referredTx": {
          "type": "string",
          "format": "byte"
        },
        "amountLimit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/contractAmount"
          }
        },
        "reserved": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "txpbTxReceipt": {
      "type": "object",
      "properties": {
        "txHash": {
          "type": "string",
          "format": "byte"
        },
        "gasUsage": {
          "type": "string",
          "format": "int64"
        },
        "ramUsage": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        },
        "status": {
          "$ref": "#/definitions/txpbStatus"
        },
        "returns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "receipts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/txpbReceipt"
          }
        }
      }
    }
  }
}
